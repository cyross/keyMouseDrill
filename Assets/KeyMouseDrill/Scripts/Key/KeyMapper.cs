using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using UnityEngine;
#if UNITY_EDITOR
using UnityEditor;
#endif

/**
 * auto generated by KeyMapper
 */
[CreateAssetMenu(menuName = "ScriptableObject/KeyMapper")]
public class KeyMapper : ScriptableObject
{
    public string KeyName;
    public string DisplayName;
    public KeyMouDrill.KeyType KeyType;

    private const string _RESOURCE_PATH = "Assets/KeyMouseDrill/Resources";

    private const string _KEY_MAPPER_PATH = "KeyMapper";

    public static KeyMapper Create()
    {
        return ScriptableObject.CreateInstance<KeyMapper>();
    }

    public static KeyMapper Load(string key)
    {
        return Resources.Load<KeyMapper>($"{_KEY_MAPPER_PATH}/{key}");
    }

    public static KeyMapper[] LoadAll()
    {
        return Resources.LoadAll<KeyMapper>(_KEY_MAPPER_PATH);
    }

    #if UNITY_EDITOR
    public void Save()
    {
        AssetDatabase.CreateAsset(this, $"{_RESOURCE_PATH}/{_KEY_MAPPER_PATH}/{KeyName}.asset");
        EditorUtility.SetDirty(this);
    }
    #endif

    public static KeyMapper Instantiate(string key)
    {
        return UnityEngine.Object.Instantiate<KeyMapper>(Load(key));
    }
}
